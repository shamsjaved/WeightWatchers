/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

//import mobileautomation.GeneralScripting

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'
    compile 'org.seleniumhq.selenium:selenium-java:3.8.1'
    compile 'io.github.bonigarcia:webdrivermanager:1.7.2'
    //compile 'org.seleniumhq.selenium:htmlunit-driver:2.28.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

task run(type: JavaExec) {
    main = "mobileautomation.GeneralScripting"
    classpath = sourceSets.main.runtimeClasspath
    args = ["$arg1", "$arg2"]
}